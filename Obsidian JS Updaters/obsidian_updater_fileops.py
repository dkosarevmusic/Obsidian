import os
import shutil
from datetime import datetime
from typing import List, Callable

from obsidian_updater_core import AnalysisResult

def archive_and_modify_files(results: List[AnalysisResult], vault_path: str, modification_func: Callable) -> int:
    """
    –ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã, –∞ –∑–∞—Ç–µ–º –∏–∑–º–µ–Ω—è–µ—Ç –∏—Ö —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
    """
    if not results:
        return 0

    # --- –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∞—Ä—Ö–∏–≤–∞ ---
    try:
        archive_base_dir = os.path.join(os.path.dirname(vault_path), "Archive", "Obsidian Updater Archive")
        timestamp_dir = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
        archive_run_dir = os.path.join(archive_base_dir, timestamp_dir)
        os.makedirs(archive_run_dir, exist_ok=True)
        print(f"\nüóÑÔ∏è –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤ –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏: '{archive_run_dir}'")
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞—Ä—Ö–∏–≤–∞: {e}")
        print("üö´ –ó–∞–º–µ–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö.")
        return 0

    modified_count = 0
    for res in results:
        try:
            # --- –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ ---
            relative_path = os.path.relpath(res.file_path, vault_path)
            backup_path = os.path.join(archive_run_dir, relative_path)
            os.makedirs(os.path.dirname(backup_path), exist_ok=True)
            shutil.copy2(res.file_path, backup_path)

            # --- –ó–∞–º–µ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ ---
            with open(res.file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            new_content, num_replacements = modification_func(content)
            
            if num_replacements > 0:
                with open(res.file_path, 'w', encoding='utf-8') as f:
                    f.write(new_content)
                modified_count += 1
        except Exception as e:
            print(f"‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–º–µ–Ω—É –≤ —Ñ–∞–π–ª–µ {res.file_path}: {e}")
    
    print(f"üöÄ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ {modified_count} –∏–∑ {len(results)} —Ñ–∞–π–ª–æ–≤.")
    return modified_count